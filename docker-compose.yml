version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: celebnetwork
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: celebnetwork
      JWT_SECRET: your_jwt_secret
      GROQ_API_KEY: your_groq_api_key
    depends_on:
      - db
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    command: npm run start:prod

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
    depends_on:
      - backend
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
    command: npm run build && npm run start

volumes:
  db_data: